<?php

namespace Modules\Mall\Repositories\Eloquent\Member\Withdrawal;

use Modules\Mall\Entities\Member\Withdrawal\Log;
use Modules\Mall\Repositories\Interfaces\Member\Asset\CommissionRepository;
use Modules\Mall\Repositories\Interfaces\Member\Withdrawal\LogRepository;
use Modules\Mall\Repositories\Presenters\Member\Withdrawal\LogPresenter;
use Prettus\Repository\Eloquent\BaseRepository;

/**
 * Class VideoRepositoryEloquent.
 *
 * @package namespace App\Repositories\Eloquent;
 */
class LogRepositoryEloquent extends BaseRepository implements LogRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Log::class;
    }

    public function presenter()
    {
        return app(LogPresenter::class); // TODO: Change the autogenerated stub
    }

    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {

    }

    public function adminList($title, $array, $limit, $interval)
    {
        return $this->scopeQuery(function ($query) use ($title, $array, $interval) {
            return $query->whereRaw("(concat(name,account) like '%" . $title . "%')")->where($array)->whereBetween('created_at', $interval);
        })->orderBy('audit', 'asc')->orderBy('id', 'desc')->paginate($limit);
    }

    public function processLog($user_id, $num, $type)
    {
        $data = [
            'user_id' => $user_id,
            'num' => $num,
            'type' => $type
        ];
        $commission = app(CommissionRepository::class);
        $commission->processLog($data, $type === 'inc' ? 6 : 5);
    }

    public function selfList($array, $interval, $limit)
    {
        return $this->scopeQuery(function ($query) use ($array, $interval) {
            return $query->where($array)->whereBetween('created_at', $interval);
        })->orderBy('id', 'desc')->paginate($limit);
    }
}
