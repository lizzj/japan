<?php

namespace Modules\Mall\Repositories\Eloquent\System;

use Modules\Mall\Entities\System\Version;
use Modules\Mall\Repositories\Interfaces\System\VersionRepository;
use Modules\Mall\Repositories\Presenters\System\VersionPresenter;
use Prettus\Repository\Eloquent\BaseRepository;

/**
 * Class VideoRepositoryEloquent.
 *
 * @package namespace App\Repositories\Eloquent;
 */
class VersionRepositoryEloquent extends BaseRepository implements VersionRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Version::class;
    }

    public function presenter()
    {
        return app(VersionPresenter::class); // TODO: Change the autogenerated stub
    }

    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {

    }

    public function maxId($platform)
    {
        return Version::where(['release' => 'yes', 'platform' => $platform])->max('id');
    }

    public function verify($code, $platform)
    {
        try {
            $result = $this->find($this->maxId($platform))['data'];
        } catch (\Exception $e) {
            return 60001;
        }
        //查看code是否存在,如果code不存在,则获取最新的版本
        $verifyInfo = $this->findWhere(['version' => $code, 'platform' => $platform])['data'];
        if (count($verifyInfo) === 0) {
            $result['force'] = 'yes';
            return $result;
        }
        if ($result['force'] === 'yes') {
            return $result;
        }
        if ($code === $result['version']) {
            return false;
        }
        return $result;
    }
}
