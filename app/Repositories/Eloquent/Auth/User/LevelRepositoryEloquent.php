<?php

namespace App\Repositories\Eloquent\Auth\User;

use App\Repositories\Presenters\Auth\User\LevelPresenter;
use Prettus\Repository\Eloquent\BaseRepository;
use Prettus\Repository\Criteria\RequestCriteria;
use App\Repositories\Interfaces\Auth\User\LevelRepository;
use App\Models\Auth\User\Level;

/**
 * Class LevelRepositoryEloquent.
 *
 * @package namespace App\Repositories\Eloquent\Auth\User;
 */
class LevelRepositoryEloquent extends BaseRepository implements LevelRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Level::class;
    }

    public function presenter()
    {
        return app(LevelPresenter::class); // TODO: Change the autogenerated stub
    }

    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {

    }

    public function option()
    {
        return Level::where(['status' => 'on'])->orderBy('weight', 'asc')->pluck('name', 'id');
    }

    public function clientList($weight)
    {
        return $this->scopeQuery(function ($query) use ($weight) {
            return $query->where(['status' => 'on'])->where('weight', '>', $weight)->whereNotIn('id', [1]);
        })->orderBy('weight', 'asc')->all();
    }
}
