<?php

namespace App\Repositories\Eloquent\System\Payment;

use App\Repositories\Presenters\System\Payment\AlipayPresenter;
use Prettus\Repository\Eloquent\BaseRepository;
use Prettus\Repository\Criteria\RequestCriteria;
use App\Repositories\Interfaces\System\Payment\AlipayRepository;
use App\Models\System\Payment\Alipay;

/**
 * Class AlipayRepositoryEloquent.
 *
 * @package namespace App\Repositories\Eloquent\System\Payment;
 */
class AlipayRepositoryEloquent extends BaseRepository implements AlipayRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Alipay::class;
    }

    public function presenter()
    {
        return app(AlipayPresenter::class); // TODO: Change the autogenerated stub
    }

    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {

    }

    public function isExist($app_id, $mode, $service_id, $id)
    {
        if ((int)$mode === 0) {
            return Alipay::where(['app_id' => $app_id, 'mode' => 0])->whereNotIn('id', [$id])->count() > 0;
        } else {
            return Alipay::where(['app_id' => $app_id, 'mode' => 2, 'service_provider_id' => $service_id])->whereNotIn('id', [$id])->count() > 0;
        }
    }

    public function randomAccount()
    {
        $array = $this->scopeQuery(function ($query) {
            return $query->where(['status' => 'on']);
        })->orderByRaw("RAND()")->take(1)->pluck('id')->toArray();
        if (count($array) === 0) {
            return false;
        }
        return $array[0];
    }
}
